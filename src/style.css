body {
  background-image: url("./img/bg.gif");
  background-size: cover; /* scale to cover whole viewport */
  background-position: center; /* center the image */
  background-repeat: no-repeat;
  background-attachment: fixed; /* optional: keeps image fixed during scroll */
  background-color: #fff; /* fallback color while image loads */
}

.keyboard-button {
  /* make the button a circle */
  width: min(30vw, 1920px);
  height: min(20vw, 1440px);
  padding: 0;
  border: none;
  background: transparent;
  border-radius: 50%;
  margin-left: 8px;
  cursor: pointer;
  transform-origin: center;
  transition: transform 160ms ease;
  overflow: hidden;
  display: inline-grid;
  place-items: center;
}

.keyboard-img {
  /* scale image to fit inside the circular button */
  width: 90%;
  height: 90%;
  object-fit: contain;
  border: none;
}

/* Hover/active/focus interactions for interactive elements */
.keyboard-button:hover {
  transform: scale(1.06);
}

.keyboard-button:active {
  transform: scale(0.96);
}

.keyboard-button:focus-visible {
  outline: 3px solid rgba(0, 120, 215, 0.25);
  outline-offset: 2px;
}

/* Layout: align auto-buttons to the right */
main.app {
  display: flex;
  align-items: center;
  gap: 12px;
  padding: 16px;
}

.counter-container {
  display: flex;
  flex-direction: column;
  gap: 6px;
}

/* configurable font sizes for labels */
:root {
  --counter-font-size: 36px;
  --increment-font-size: 30px;
}

.counter-container {
  align-items: center; /* center labels and button horizontally */
}

.counter-label {
  font-size: var(--counter-font-size);
  text-align: center;
  color: white;
}

.increment-label {
  font-size: var(--increment-font-size);
  color: white;
  text-align: center;
}

.auto-buttons {
  margin-left: auto; /* push to right */
  --btn-height: 120px; /* configurable button height */
  display: grid;
  grid-auto-rows: var(--btn-height);
  row-gap: 8px;
  align-items: stretch;
  width: 450px; /* all buttons same width */
}

.auto-buttons button {
  width: 100%;
  height: 100%;
  box-sizing: border-box;
  display: flex;
  align-items: center;
  justify-content: center;
  padding: 0 12px;
}

/* Structured purchase button layout */
.purchase-button {
  display: flex;
  flex-direction: column;
  align-items: stretch;
  padding: 24px;
  text-align: left;
}

.purchase-button:enabled,
.auto-buttons button:enabled {
  background-color: black;
  color: white;
  border: 1px solid rgba(255, 255, 255, 0.12);
}

.purchase-head {
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%; /* Ensure it spans full width of parent */
  box-sizing: border-box; /* Respect padding */
}

.purchase-main {
  display: flex;
  flex-direction: column;
  align-items: flex-start; /* left-align title and cost */
}

.purchase-title {
  font-size: 1.2rem;
  font-weight: 600;
  color: white;
}

.purchase-cost {
  font-size: 1.1rem;
  color: white;
}

.purchase-count {
  font-size: 1.6rem;
  font-weight: 700;
  width: 64px; /* fixed column on the right */
  text-align: right;
  color: white;
}

.purchase-desc {
  font-size: 0.8rem;
  color: white;
}

/* Floating lightbulb (spawned on keyboard button) */
.floating-bulb {
  position: fixed; /* positioned by inline left/top (viewport coords) */
  transform-origin: center;
  pointer-events: none;
  will-change: transform, opacity;
  /* animation: float upward while keeping the scale at 1/3 */
  animation: float-up 1000ms ease-out forwards;
}

@keyframes float-up {
  from {
    transform: translate(-50%, -50%) scale(0.20);
    opacity: 1;
  }
  to {
    /* move further upward and fade out; */
    transform: translate(-50%, -100%) scale(0.10);
    opacity: 0;
  }
}
